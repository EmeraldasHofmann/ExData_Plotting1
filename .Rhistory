swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
sample(c(0, 1), 100, c(0.3, 0.7), replace = TRUE)
flips <- sample(c(0, 1), 100, c(0.3, 0.7), replace = TRUE)
flips <- sample(c(0, 1), 100, replace = TRUE, prob =  c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
info()
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips
0
q()
install.packages("xlsx")
install.packages("xlsx")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
install.packages("rJava")
install.packages
?install.packages
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
install.packages("xlsxjars")
install.packages("xlsxjars")
library(xlsx)
install.packages("RMySQL")
install.packages("rJava")
install.packages("rJava")
sudo R CMD javareconf
install.packages("rJava")
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
source("https://bioconductor.org/biocLite.R")
biocLite("rhdf5")
biocLite("BopcUpgrade")
biocLite("BiocUpgrade")
install.packages("curl")
install.packages("curl")
install.packages("curl")
con = url("https://scholar.google.it/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
html
htmlCode
library(XML)
url <- "https://scholar.google.it/citations?user=HI-I6C0AAAAJ&hl=en"
ls()
rm("htmlCode")
ls()
html <- htmlTreeParse(url, useInternalNodes = TRUE)
xpathSApply(html, "//title", xmlValue)
head(html)
library(RCurl)
setwd("~/Scrivania/DATA_SCIENCE/C4_ExploratoryDataAnalysis")
library(datasets)
data(cars)
with(cars,plot(speed, dist))
naes(cars)
names(cars)
library(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state)
colors()
library(datasets)
with(airquality, plot(Wind, Ozone))
title(main = "Ozono and Wind in New York City")
with(subset(airquality, Month == 5),points(Wind, Ozone, col = "blue"))
summary(airquality$Month)
with(subset(airquality, Month == 5),points(Wind, Ozone, col = "red"))
with(subset(airquality, Month == 5),points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month == 6),points(Wind, Ozone, col = "red"))
with(subset(airquality, Month == 7),points(Wind, Ozone, col = "green"))
with(subset(airquality, Month == 8),points(Wind, Ozone, col = "magenta"))
with(subset(airquality, Month == 9),points(Wind, Ozone, col = "turquoise1"))
legend("topright", pch = 1, col("blue", "red", "green", "magenta", "turquise1"), legend = c("May", "June", "July", "August", "September"))
with(airquality, plot(Wind, Ozone), main = "Ozone and Wind in New York City", type = "n")
with(subset(airquality, Month == 5),points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month == 6),points(Wind, Ozone, col = "red"))
with(subset(airquality, Month == 7),points(Wind, Ozone, col = "green"))
with(subset(airquality, Month == 8),points(Wind, Ozone, col = "magenta"))
with(subset(airquality, Month == 9),points(Wind, Ozone, col = "turquoise1"))
legend("topright", pch = 1, col("blue", "red", "green", "magenta", "turquise1"), legend = c("May", "June", "July", "August", "September"))
legend("topright", pch = 1, col("blue", "red", "green", "magenta", "turquoise1"), legend = c("May", "June", "July", "August", "September"))
legend("topright", pch = 1, col= c("blue", "red", "green", "magenta", "turquoise1"), legend = c("May", "June", "July", "August", "September"))
with(airquality, plot(Wind, Ozone), main = "Ozone and Wind in New York City", type = "n")
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", type = "n"))
par(mfrow=c(1,2))
with(airquality,  {})
with(airquality,  {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main "Ozone and Solar Radiation")
})
with(airquality,  {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
})
?par
x<- rnorm(100)
y<- rnorm(100)
z<- rnorm(100)
plt(x,y)
plot(x,y)
par(mfrow = c(1,1))
plot(x,y)
plot(x,y,   pch = 20)
plot(x,y,   pch = 19)
plot(x,y,   pch = 1)
plot(x,y,   pch = 2)
plot(x,y,   pch = 3)
plot(x,y,   pch = 4)
plot(x,y,   pch = 5)
plot(x,y,   pch = 6)
plot(x,y,   pch = 7)
plot(x,y,   pch = 8)
plot(x,y,   pch = 9)
plot(x,y,   pch = 10)
plot(x,y,   pch = 11)
plot(x,y,   pch = 12)
plot(x,y,   pch = 13)
plot(x,y,   pch = 14)
plot(x,y,   pch = 15)
plot(x,y,   pch = 16)
plot(x,y,   pch = 17)
plot(x,y,   pch = 18)
plot(x,y,   pch = 19)
plot(x,y,   pch = 20)
plot(x,y,   pch = 21)
plot(x,y,   pch = 22)
plot(x,y,   pch = 1)
plot(x,y,   pch = 21)
plot(x,y,   pch = 22)
plot(x,y,   pch = 23)
plot(x,y,   pch = 24)
example("points")
x<- rnorm(100)
y<- rnorm(100)
z<- rnorm(100)
plot(x, y, pch = 20)
title("Scatter plot")
getwd()
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(12)
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline( v = 12, lwd = 2)
abline(v = median(ppm), col "magenta")
abline(v = median(ppm), col= "magenta")
abline(v = median(ppm), col= "magenta", lwd = 2)
abline(v = median(ppm), col= "magenta", lwd = 4)
names(pollution)
reg <z- pollution$region
reg <- pollution$region
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number od Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, p25))
with(pollution, plot(latitude, pm25))
abline(h=12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = "red")
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
with(subset(pollution,  region == "west"), plot(latitudes, pm25))
with(subset(pollution,  region == "west"), plot(latitude, pm25))
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25,  mean = "West")
plot(west$latitude, west$pm25,  main = "West")
plot(east$latitude, east$pm25,  mean = "East")
plot(east$latitude, east$pm25,  main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithfil Geyser data")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off(4)
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev,copy(png, file="geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region,  state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region,  state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(mpg$displ, mpg$hwy, mpg)
qplot(mpg$displ,  mpg$hwy,   mpg)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone,  na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month",  ylab = "Ozone (ppb)", col.axis = "blue",  col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind,  Ozone))
title(main = "Ozone and Wind in New York City")
par(length())
par(length
)
length(par())
par("mar")
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
with(airquality,   plot(Wind,  Ozone), type = "n")
plot(airquality$Wind, airquality$Ozone,  type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality,  Month == 5)
points(may$Wind, may$Ozone,  pch = 17, col = "blue")
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality,  Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months")
)
abline(v=median(airquality$Wind), lty  = 2, lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind,  airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone,  airquality$Solar.R, main = "Ozone and Solar  Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar  Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
title(main="Ozone and Weather in New York City", outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
setwd("~/Scrivania/DATA_SCIENCE/C4_ExploratoryDataAnalysis/w01/Project_ExplAnal1/ExData_Plotting1")
source("Project.R")
source("project.R")
project()
file_download()
hpc_data <- tbl_df(read.table("./data/household_power_consumption.txt", stringsAsFactors = TRUE)
)
library(dplyr)
hpc_data <- tbl_df(read.table("./data/household_power_consumption.txt", stringsAsFactors = TRUE))
head(hpc_data)
hpc_data <- tbl_df(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = TRUE))
head(hpc_data)
hpc_data <- tbl_df(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE))
head(hpc_data)
?unzip
head(hpc_data[,1])
x <- hpc_data[1:3,1]
x
as.Date(x, "%d%m%Y")
?as.Date
library(lubridate)
dmy(x)
x
dmy("16/12/2006")
as.Date(x)
as.Date(x, "%d%b%Y")
class(x)
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE))
head(hpc_data)
str(hpc_data)
x <- hpc_data[1:3,1]
x
as.Date(x, "%d%b%Y")
dmy(x)
dd <- dmy(x)
class(dd)
hpc_data[1:5, 1:2]
dmy_hms(hpc_data[1:5,1]+hpc_data[1:5,2])
class(hpc_data[1:5, 1:2])
class(hpc_data[1:5, 1])
class(hpc_data[1:5, 2])
paste(hpc_data[1:5,1],hpc_data[1:5,2])
gg <- paste(hpc_data[1:5,1],hpc_data[1:5,2])
dmy_hms(gg)
?strptime
View
View(hpc_data)
?read.table
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(Date, Date, numeric, numeric, numeric, numeric, integer, integer, integer )))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(date, date, numeric, numeric, numeric, numeric, integer, integer, integer )))
head(hpc_data)
str(hpc_data)
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(date, date, numeric, numeric, numeric, numeric,numeric, numeric, numeric )))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(posixct, posixct, numeric, numeric, numeric, numeric,numeric, numeric, numeric )))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(POSIXct, POSIXct, numeric, numeric, numeric, numeric,numeric, numeric, numeric )))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("POSIXct", "POSIXct", numeric, numeric, numeric, numeric,numeric, numeric, numeric )))
str(hpc_data)
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = numeric))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("date", "date", numeric, numeric,numeric,numeric,numeric,numeric,numeric)))
head(hpc_data)
library(dplyr)
hpc_data1 <-  select(hpc_data, Date == "01/02/2007", Date == "02/02/2007")
names(hpc_data)
hpc_data1 <-  filter(hpc_data, Date == "01/02/2007", Date == "02/02/2007")
dim(hpc_data)
dim(hpc_data1)
hpc_data1 <-  filter(hpc_data, Date == "1/2/2007", Date == "2/2/2007")
dim(hpc_data1)
hpc_data1 <-  filter(hpc_data, Date == "1/2/2007" | Date == "2/2/2007")
dim(hpc_data1)
str(hpc_data1)
hist(hpc_data1$Global_active_power)
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(character, character, numeric, numeric,numeric,numeric,numeric,numeric,numeric)))
hpc_data_3 <- read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c(character, character, numeric, numeric,numeric,numeric,numeric,numeric,numeric))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("Date", "Date", "numeric", "numeric", "numeric", "numeric","numeric", "integer", "integer", "integer" )))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("Date", "Date", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "numeric", "numeric" )))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("Date", "Date", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "numeric")))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("Date", "Date", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "numeric"), na.strings = "\?"))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("Date", "Date", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "numeric"), na.strings = "?"))
hpc_data <- data.frame(read.table("./data/household_power_consumption.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("character", "character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "numeric"), na.strings = "?"))
str(hpc_data)
hpc_data1 <-  filter(hpc_data, Date == "1/2/2007" | Date == "2/2/2007")
hist(hpc_data1$Global_active_power)
par(mfrow=c(1,1))
hist(hpc_data1$Global_active_power)
plot(hpc_data1$Date,    hpc_data1$Global_active_power)
plot(hpc_data1$Date, hpc_data1$Global_active_power)
plot(as.Date(hpc_data1$Date, hpc_data1$Global_active_power, "%d%b%Y")
)
plot(dmy_hms(paste(hpc_data1$Date, hpc_data1$Time), hpc_data1$Global_active_power))
plot(dmy_hms(paste(hpc_data1$Date, hpc_data1$Time)), hpc_data1$Global_active_power)
plot(dmy(hpc_data1$Date), hpc_data1$Global_active_power, col = "red")
tf
?file.exists
if(file.exists("./data_energy/hpc.txt")){print("ok")}
if(file.exists("./data_energy/hpc.txt")){print("ok")}else{prin("ko")}
if(file.exists("./data_energy/hpc.txt")){print("ok")}else{print("ko")}
if(file.exists("./data_energy/hpc.txt")){print("ok")}else{file.create("./data_energy/ciao.txt")}
if(file.exists("./data_energy/hpc.txt")){print("ok")}else{file.create("./data/ciao.txt")}
ls()
?ls
ls() == "cars"
sum(ls() == "cars")
sum(ls() == "cc")
?png
getwd()
list.files()
ls()
rm(ls())
?rm
rm(list=ls())
ls()
source("project.R")
ls()
plot1()
ls()
source("project.R")
plot1()
ls()
dim(hpc_data)
make_dataset()
dim(hpc_sub)
dim(hpc_data)
source("project.R")
make_dataset()
dim(hpc_sub)
dim(hpc_data)
dim(make_dataset())
z
dim(make_dataset
)
ls()
rm(list= ls())
ls()
source("project.R")
ls
ls()
plot1()
source("project.R")
plot1()
source("project.R")
plot1()
plot(dmy_hms(paste(hpc_data1$Date, hpc_data1$Time)), hpc_data1$Global_active_power)
plot(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Global_active_power)
ls()
if(sum(ls() == "hpc_sub") == 0){hpc_sub <- make_dataset()}
ls()
plot(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Global_active_power)
plot(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Global_active_power, type = "n")
lines(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Global_active_power)
plot(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Global_active_power, type = "n",   xlab ="", ylab = "Global Active Power (kilowatts)")
lines(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Global_active_power)
?plot
plot(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Global_active_power, type = "l",   xlab ="", ylab = "Global Active Power (kilowatts)")
?dmy_hms
lines(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time), locale = "en"), hpc_sub$Global_active_power)
Sys.getlocale()
lines(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time), locale = locale("en")), hpc_sub$Global_active_power)
library(readr)
lines(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time), locale = locale("en")), hpc_sub$Global_active_power)
Sys.getlocale()
Sys.setlocale("LC_TIME", "en_GB.UTF-8")
Sys.getlocale()
plot(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Global_active_power, type = "l",   xlab ="", ylab = "Global Active Power (kilowatts)")
source("projecct.R")
source("project.R")
plot2()
plot(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Sub_metering_1, type = "l",   xlab ="", ylab = "Energy sub metering")
lines(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Sub_metering_2,  col = "red")
lines(dmy_hms(paste(hpc_sub$Date, hpc_sub$Time)), hpc_sub$Sub_metering_3,  col = "blue")
legend("topright", lty=1, col = c("black",  "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
source("project.R")
plot3()
datetime <- dmy_hms(paste(hpc_sub$Date, hpc_sub$Time))
head(datetime)
plot(datetime, hpc_sub$Sub_metering_1, type = "l",   xlab ="", ylab = "Energy sub metering")
source("project.R")
plot4()
source("project.R")
plot4()
'i0'
source("project.R")
plot4()
?legend
source("project.R")
plot4()
source("project.R")
plot4()
source("project.R")
plot4()
source("project.R")
plot4()
plot4()
source("project.R")
plot4()
source('~/Scrivania/DATA_SCIENCE/C4_ExploratoryDataAnalysis/w01/Project_ExplAnal1/ExData_Plotting1/plot4.R')
make_dataset <- function(){
#sercing data file, if no exist call file_download() function
if(!file.exists("./data_energy/hpc.txt")){file_download()}
## read dataset
hpc_data <- data.frame(read.table("./data_energy/hpc.txt", sep = ";", header = TRUE, stringsAsFactors = FALSE, colClasses = c("character", "character", "numeric", "numeric", "numeric", "numeric","numeric", "numeric", "numeric"), na.strings = "?"))
# subsetting dataframe from 1/2/2007 to 2/2/2007
hpc_sub <- filter(hpc_data, Date == "1/2/2007" | Date == "2/2/2007")
rm("hpc_data")
hpc_sub
}
ls()
rm(list=ls())
ls()
